# Database Configuration
# For local development, update these to match your local PostgreSQL setup
# In production/Kubernetes, these are provided by ConfigMap and Secrets
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=recipe_database
POSTGRES_SCHEMA=recipe_manager

# Notification Service Database User
# These credentials should be created in your PostgreSQL database
NOTIFICATION_SERVICE_DB_USER=notification_service_user
NOTIFICATION_SERVICE_DB_PASSWORD=your_secure_password_here

# Redis Configuration
# Used for caching and rate limiting
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=1
REDIS_PASSWORD=your_secure_password_here

# Rate Limiting Configuration
# Max requests per time window (in seconds)
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# CORS Configuration
# Comma-separated list of allowed origins
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173

# Logging Configuration
# Controls the minimum log level for all logs (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Path to the JSON log file (supports rotation: 100MB per file, 10 days retention)
# Default: ./logs/notification-service.log
# Production example: /var/log/notification-service/app.log
LOG_FILE_PATH=./logs/notification-service.log

# Service metadata included in all log entries
SERVICE_NAME=notification-service

# Deployment environment (development, staging, production)
ENVIRONMENT=development

# JWT Configuration (MUST match auth-service)
# Only used if OAUTH2_INTROSPECTION_ENABLED=false, otherwise empty string ""
JWT_SECRET=your-very-secure-secret-key-at-least-32-characters-long

# OAuth2 Service Configuration
# Enable OAuth2 authentication for incoming requests
OAUTH2_SERVICE_ENABLED=true
# Enable service-to-service token fetching (client_credentials flow)
OAUTH2_SERVICE_TO_SERVICE_ENABLED=true
# Use token introspection (true) or local JWT validation (false)
OAUTH2_INTROSPECTION_ENABLED=false
# OAuth2 client credentials (generated by auth-service)
OAUTH2_CLIENT_ID=notification-service-client
OAUTH2_CLIENT_SECRET=your-oauth2-client-secret-here

# Notes:
# - This .env file is only used for local development
# - In Docker/Kubernetes deployments, environment variables come from ConfigMap/Secrets
# - Tests use SQLite in-memory database for speed
# - The service will start even if database is unavailable (degraded mode)
# - Health checks will show 'degraded' status when database is down
# - Redis is required for rate limiting; service will allow requests if Redis is unavailable
# - JWT_SECRET is only required when OAUTH2_INTROSPECTION_ENABLED=false
# - Set OAUTH2_SERVICE_ENABLED=false to disable authentication entirely (development only)
