name: Code Coverage

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.14'
  COVERAGE_THRESHOLD: 80  # Minimum coverage percentage

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Check Code Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 2  # Need two commits for diff

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Install coverage tool
      run: poetry add --group dev coverage --no-interaction

    - name: Run tests with coverage
      run: |
        poetry run coverage run --source='.' manage.py test --no-input
        poetry run coverage report
        poetry run coverage xml
        poetry run coverage html

    - name: Calculate coverage percentage
      id: coverage
      run: |
        COVERAGE=$(poetry run coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
        echo "coverage=${COVERAGE}" >> $GITHUB_OUTPUT
        echo "Current coverage: ${COVERAGE}%"

    - name: Check coverage threshold
      env:
        COVERAGE: ${{ steps.coverage.outputs.coverage }}
        THRESHOLD: ${{ env.COVERAGE_THRESHOLD }}
      run: |
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "❌ Coverage ${COVERAGE}% is below threshold ${THRESHOLD}%"
          exit 1
        else
          echo "✅ Coverage ${COVERAGE}% meets threshold ${THRESHOLD}%"
        fi

    - name: Upload coverage report
      uses: actions/upload-artifact@v5
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-notification-service
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v8
      with:
        script: |
          const coverage = '${{ steps.coverage.outputs.coverage }}';
          const threshold = '${{ env.COVERAGE_THRESHOLD }}';

          const status = parseFloat(coverage) >= parseFloat(threshold) ? '✅' : '❌';
          const meetsThreshold = parseFloat(coverage) >= parseFloat(threshold);
          const statusMsg = meetsThreshold
            ? '✅ Coverage meets the minimum threshold.'
            : '❌ Coverage is below the minimum threshold. Please add more tests.';

          const body = "## " + status + " Code Coverage Report\n\n" +
            "**Overall Coverage:** " + coverage + "%\n" +
            "**Threshold:** " + threshold + "%\n\n" +
            statusMsg + "\n\n" +
            "[View full coverage report](https://app.codecov.io/gh/${{ github.repository }}/pull/${{ github.event.pull_request.number }})";

          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: body
          });
