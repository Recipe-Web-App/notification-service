name: License Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.14'

permissions:
  contents: read
  pull-requests: write

jobs:
  license-check:
    name: Check Dependency Licenses
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Install pip-licenses
      run: poetry add --group dev pip-licenses --no-interaction

    - name: Check for forbidden licenses
      id: check
      continue-on-error: true
      run: |
        poetry run pip-licenses --format=json > licenses.json

        # Check for forbidden licenses
        FORBIDDEN=$(poetry run pip-licenses --format=plain | grep -E "GPL-3.0|AGPL-3.0|LGPL-3.0" || true)

        if [ -n "$FORBIDDEN" ]; then
          echo "forbidden_found=true" >> $GITHUB_OUTPUT
          echo "$FORBIDDEN" > forbidden-licenses.txt
        else
          echo "forbidden_found=false" >> $GITHUB_OUTPUT
        fi

    - name: Generate license report
      run: |
        echo "# License Report" > license-report.md
        echo "" >> license-report.md
        echo "## All Dependencies" >> license-report.md
        echo "" >> license-report.md
        poetry run pip-licenses --format=markdown >> license-report.md

    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: |
          license-report.md
          licenses.json
        retention-days: 90

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v8
      with:
        script: |
          const fs = require('fs');
          const forbiddenFound = '${{ steps.check.outputs.forbidden_found }}';

          let body = '';

          if (forbiddenFound === 'true' && fs.existsSync('forbidden-licenses.txt')) {
            const forbiddenContent = fs.readFileSync('forbidden-licenses.txt', 'utf8');
            body = [
              "## ⚠️ License Check Failed",
              "",
              "This PR introduces dependencies with problematic licenses.",
              "",
              "<details>",
              "<summary>Forbidden License Details</summary>",
              "",
              "```",
              forbiddenContent,
              "```",
              "",
              "</details>",
              "",
              "### Blocked Licenses",
              "- GPL-3.0 (copyleft - requires source distribution)",
              "- AGPL-3.0 (network copyleft - requires source for SaaS)",
              "- LGPL-3.0 (copyleft for libraries)",
              "",
              "Please review these dependencies or seek legal approval."
            ].join("\n");
          } else {
            body = [
              "## ✅ License Check Passed",
              "",
              "All dependency licenses are compliant.",
              "",
              "[View full license report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            ].join("\n");
          }

          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: body
          });

    - name: Fail if forbidden licenses found
      if: steps.check.outputs.forbidden_found == 'true'
      run: |
        echo "❌ Forbidden licenses detected"
        exit 1
