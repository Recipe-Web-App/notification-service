name: Greet Contributors

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]

permissions:
  issues: write
  pull-requests: write

jobs:
  greet:
    name: Greet First-Time Contributors
    runs-on: ubuntu-latest

    steps:
    - name: Greet first-time issue creator
      if: github.event_name == 'issues'
      uses: actions/github-script@v8
      with:
        script: |
          const creator = context.payload.issue.user.login;

          // Check if this is the user's first issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            creator: creator,
            state: 'all'
          });

          if (issues.data.length === 1) {
            const body = [
              "ðŸ‘‹ Hello @" + creator + "!",
              "",
              "Thank you for opening your first issue in this repository! We appreciate you taking the time to contribute.",
              "",
              "A maintainer will review your issue and respond as soon as possible.",
              "",
              "**In the meantime, please make sure you've:**",
              "- [ ] Provided all the requested information",
              "- [ ] Searched for similar existing issues",
              "- [ ] Read our [Contributing Guidelines](.github/CONTRIBUTING.md)",
              "",
              "Welcome to the community! ðŸŽ‰"
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: body
            });
          }

    - name: Greet first-time PR creator
      if: github.event_name == 'pull_request_target'
      uses: actions/github-script@v8
      with:
        script: |
          const creator = context.payload.pull_request.user.login;

          // Check if this is the user's first PR
          const prs = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'all',
            creator: creator
          });

          if (prs.data.length === 1) {
            const body = [
              "ðŸŽ‰ Congratulations @" + creator + " on opening your first pull request!",
              "",
              "Thank you for taking the time to contribute to this project! We're excited to review your changes.",
              "",
              "**What happens next?**",
              "- Automated checks will run on your PR",
              "- A maintainer will review your code and provide feedback",
              "- Please address any comments or suggestions",
              "- Once approved, a maintainer will merge your PR",
              "",
              "**Helpful resources:**",
              "- [Contributing Guidelines](.github/CONTRIBUTING.md)",
              "- [Code of Conduct](.github/CODE_OF_CONDUCT.md)",
              "- [Pull Request Template](.github/pull_request_template.md)",
              "",
              "Thank you for being part of our community! ðŸ™Œ"
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: body
            });
          }
